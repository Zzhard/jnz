上周回顾：
    面向对象：
        class  Person：
            def say(self):
                pass

        class P2(Person):
            pass

        xiaoming = Person()  #实例化
        xiaoming.say()
        类：一个模型，一个种类
        对象、实例：根据类造出来的具体的东西。
        把类变量实例的过程叫做实例化。
        继承:继承父类有的功能
        构造函数，就是这个类在初始化的时候就要做的操作。

         name,weight
        人，它跑步一次体重减1斤，吃一顿饭体重加2斤。

        每次吃饭或者跑步之后，要告诉他的体重是多少



        私有变量
            变量名前面加__
        私有方法
            函数名前面加__
                    出了类之后就不能访问了。
        类变量：
            类里面定义的变量，公共的，不需要实例化就可以用的。
        类方法
            类里面的定义的公共方法，不需要实例化就可以调用
            什么时候用类方法：
                这个方法里面没有用到实例变量或者没有调用实例方法的时候，
                只用到了类变量就可以给它定义成一个类方法。
        实例方法：
            实例方法必须实例化之后才可以使用，
            实例方法里面可以随便调用类方法，类变量。
        静态方法
           只是定义在类里面的一个普通的函数而已。
           什么时候用静态方法：
            如果这个函数没有用到类变量、类方法、实例变量、实例方法，那么
            就可以把它定义成静态方法。
            类方法、实例方法可以随便调用静态方法
        继承:
            修改父类的方法。






这周要学习的：

    多线程：

    多进程：
        多进程可以利用多核cpu。


    进程：
        进程就是一组资源的集合。
        线程是在进程里面具体干活的。
        一个进程里面至少一个线程，这个线程就是主线程。
    守护线程：
        主线程：秦始皇
        守护线程：秦始皇修陵墓的人

    你电脑的有CPU是几核就只能同时运行几个任务（线程）。
    python里面的多线程，其实也利用不了多核CPU。

    GIL 全局解释器锁的。

    作业1：
        为什么python的多线程利用不了多核CPU，但是咱们用的时候多线程的确比单线程快？

    锁：
    CPU密集型任务   多进程
            CPU干活
    IO密集型任务    多线程
        input
        output
            磁盘IO
            网络IO
    单元测试：
        开发自测的时候写的代码。

    1、测试用例怎么管理
            excel
    2、获取用例

    3、执行测试用例

    4、校验结果

    5、保存测试结果

    6、生成报告、发送报告

    7、
        正文：
        附件：xxx



